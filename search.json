[
  {
    "objectID": "cordoba.html",
    "href": "cordoba.html",
    "title": "Informatie over gebied",
    "section": "",
    "text": "Córdoba is een stad in Andalusië in het zuiden van Spanje. Het is de hoofdstad van de provincie Córdoba. De stad ligt op 122 meter boven zeeniveau, aan de rivier de Guadalquivir en aan de voet van het gebergte Sierra Morena. In 2005 had ze 321.165 inwoners, waarmee het de derde stad van Andalusië is. Het is de warmste stad van Europa: de temperatuur stijgt elk jaar weer geregeld boven de 35 °C.\nCórdoba was ooit een van de belangrijkste steden ter wereld, in de 10de eeuw zelfs de op een na grootste, met een voor die tijd ongekend hoog inwonertal van rond de 500.000. Het was de hoofdstad van het middeleeuwse emiraat Córdoba, later het kalifaat Córdoba. Uit die tijd zijn talrijke monumenten overgebleven, waarvan de Mezquita het bekendste is. Sinds 1984 staat het historische centrum van de stad op de Werelderfgoedlijst van UNESCO.\nDe stad is de geboorteplaats van filosofen als Seneca, Averroes en Maimonides. In culinaire kringen is Córdoba bekend vanwege het gerecht Rabo de Toro, een stoofpot van stierenstaart.\nAls gevolg van de Spaanse kolonisaties dragen op het Amerikaanse continent meer dan 1000 plaatsen de naam Córdoba. De belangrijkste daarvan is Córdoba in Argentinië."
  },
  {
    "objectID": "cordoba.html#cordoba",
    "href": "cordoba.html#cordoba",
    "title": "Informatie over gebied",
    "section": "",
    "text": "Córdoba is een stad in Andalusië in het zuiden van Spanje. Het is de hoofdstad van de provincie Córdoba. De stad ligt op 122 meter boven zeeniveau, aan de rivier de Guadalquivir en aan de voet van het gebergte Sierra Morena. In 2005 had ze 321.165 inwoners, waarmee het de derde stad van Andalusië is. Het is de warmste stad van Europa: de temperatuur stijgt elk jaar weer geregeld boven de 35 °C.\nCórdoba was ooit een van de belangrijkste steden ter wereld, in de 10de eeuw zelfs de op een na grootste, met een voor die tijd ongekend hoog inwonertal van rond de 500.000. Het was de hoofdstad van het middeleeuwse emiraat Córdoba, later het kalifaat Córdoba. Uit die tijd zijn talrijke monumenten overgebleven, waarvan de Mezquita het bekendste is. Sinds 1984 staat het historische centrum van de stad op de Werelderfgoedlijst van UNESCO.\nDe stad is de geboorteplaats van filosofen als Seneca, Averroes en Maimonides. In culinaire kringen is Córdoba bekend vanwege het gerecht Rabo de Toro, een stoofpot van stierenstaart.\nAls gevolg van de Spaanse kolonisaties dragen op het Amerikaanse continent meer dan 1000 plaatsen de naam Córdoba. De belangrijkste daarvan is Córdoba in Argentinië."
  },
  {
    "objectID": "cordoba.html#adres",
    "href": "cordoba.html#adres",
    "title": "Informatie over gebied",
    "section": "Overnachting",
    "text": "Overnachting\nWe overnachten in Hotel Conquistador, midden in de stad en op korte afstand van het station.\nTijdens de twee dagen verplaatsen we ons met een bus."
  },
  {
    "objectID": "cordoba.html#landbouw",
    "href": "cordoba.html#landbouw",
    "title": "Informatie over gebied",
    "section": "Landbouw in Andalusie",
    "text": "Landbouw in Andalusie\nCórdoba ligt in de deelstaat Andalusie. Het is een droog gebied, waar akkerbouw vrijwel enkel mogelijk is met irrigatie. Gedurende de twee dagen bezoeken wij bedrijven die lid zijn van de cooperatie Valle de los Pedroches, COVAP. Een cooperatie die productie en vermarkting integreert."
  },
  {
    "objectID": "deelnemers/deelnemers.html",
    "href": "deelnemers/deelnemers.html",
    "title": "Deelnemers",
    "section": "",
    "text": "Met deze koppeling vindt u de deelnemerslijst. Ivm privacy hebt u hiervoor een wachtwoord nodig."
  },
  {
    "objectID": "learning-more.html",
    "href": "learning-more.html",
    "title": "Learning more",
    "section": "",
    "text": "An excellent overview: Reproducible authoring with Quarto - Mine Çetinkaya-Rundel, Feb 2022 - slides, youtube\nA Quarto tip a day in June 2022, from Mine Çetinkaya-Rundel.\n\n\n\nOpenscapes Champions Lessons Series\nOpenscapes Approach Guide\n\nNASA Earthdata Cloud Cookbook\n\nSee many more examples at the quarto gallery!\n\n\n\nAre you making onboarding documentation? Check out The Fay Lab Manual (now in Quarto!) for inspiration on structure - you could also start there and make it your own."
  },
  {
    "objectID": "learning-more.html#learn-more",
    "href": "learning-more.html#learn-more",
    "title": "Learning more",
    "section": "",
    "text": "An excellent overview: Reproducible authoring with Quarto - Mine Çetinkaya-Rundel, Feb 2022 - slides, youtube\nA Quarto tip a day in June 2022, from Mine Çetinkaya-Rundel.\n\n\n\nOpenscapes Champions Lessons Series\nOpenscapes Approach Guide\n\nNASA Earthdata Cloud Cookbook\n\nSee many more examples at the quarto gallery!\n\n\n\nAre you making onboarding documentation? Check out The Fay Lab Manual (now in Quarto!) for inspiration on structure - you could also start there and make it your own."
  },
  {
    "objectID": "planning.html",
    "href": "planning.html",
    "title": "Planning en contactgegevens",
    "section": "",
    "text": "Datum\nTijd\nPlaats\n\n\n\n\n\n13-11\n9:50\nSchiphol\nVertrek vlucht KL 1701 uit NL\n\n\n\n11:45\nBerlin Schönefeld\nVertrek vlucht I23677 uit DE\n\n\n\n12:00\nMadrid Barajas\nAankomst vlucht KL 1701\n\n\n\n14:30\nMadrid Plaza de Atocha\nVertrek AVE Plaza de Atocha naar Córdoba\n\n\n\n15:00\nMadrid Barajas\nAankomst vlucht I23677 uit DE\n\n\n\n16:30\nCórdoba\nAankomst mensen uit NL\n\n\n\n17:00\nMadrid Plaza de Atocha\nVetrek met AVE naar Córdoba\n\n\n\n19:00\nCórdoba\nAankomst mensen uit DE\n\n\n\n21:00\nCórdoba, Hotel Conquistador\nGezamenlijk diner\n\n\n\n\n\n\n\n\n14-11\n7:30\nHotel Conquistador\nOntbijt\n\n\n\n8:30\nHotel Conquistador\nVertrek met bus naar COVAP\n\n\n\n18:00\nHotel Conquistador\nTerugkeer\n\n\n\n19:00\nCórdoba\nRondleiding door stad onder leiding van Berend Coster\n\n\n\n20:00 +\nCórdoba\nVrij programma\n\n\n15-11\n7:30\nHotel Conquistador\nOntbijt\n\n\n\n8:30\nHotel Conquistador\nVertrek met bus\n\n\n\n19:00\nCórdoba\nGezamenlijk diner in Córdoba\n\n\n16-11\n7:00 +\nHotel Conquistador\nOntbijt\n\n\n\n9:00\nTreinstation Córdoba\nVertrek mensen naar NL\n\n\n\n10:00\nTreinstation Córdoba\nVertrek mensen naar DE"
  },
  {
    "objectID": "planning.html#planning",
    "href": "planning.html#planning",
    "title": "Planning en contactgegevens",
    "section": "",
    "text": "Datum\nTijd\nPlaats\n\n\n\n\n\n13-11\n9:50\nSchiphol\nVertrek vlucht KL 1701 uit NL\n\n\n\n11:45\nBerlin Schönefeld\nVertrek vlucht I23677 uit DE\n\n\n\n12:00\nMadrid Barajas\nAankomst vlucht KL 1701\n\n\n\n14:30\nMadrid Plaza de Atocha\nVertrek AVE Plaza de Atocha naar Córdoba\n\n\n\n15:00\nMadrid Barajas\nAankomst vlucht I23677 uit DE\n\n\n\n16:30\nCórdoba\nAankomst mensen uit NL\n\n\n\n17:00\nMadrid Plaza de Atocha\nVetrek met AVE naar Córdoba\n\n\n\n19:00\nCórdoba\nAankomst mensen uit DE\n\n\n\n21:00\nCórdoba, Hotel Conquistador\nGezamenlijk diner\n\n\n\n\n\n\n\n\n14-11\n7:30\nHotel Conquistador\nOntbijt\n\n\n\n8:30\nHotel Conquistador\nVertrek met bus naar COVAP\n\n\n\n18:00\nHotel Conquistador\nTerugkeer\n\n\n\n19:00\nCórdoba\nRondleiding door stad onder leiding van Berend Coster\n\n\n\n20:00 +\nCórdoba\nVrij programma\n\n\n15-11\n7:30\nHotel Conquistador\nOntbijt\n\n\n\n8:30\nHotel Conquistador\nVertrek met bus\n\n\n\n19:00\nCórdoba\nGezamenlijk diner in Córdoba\n\n\n16-11\n7:00 +\nHotel Conquistador\nOntbijt\n\n\n\n9:00\nTreinstation Córdoba\nVertrek mensen naar NL\n\n\n\n10:00\nTreinstation Córdoba\nVertrek mensen naar DE"
  },
  {
    "objectID": "planning.html#cgegevens",
    "href": "planning.html#cgegevens",
    "title": "Planning en contactgegevens",
    "section": "Contactgegevens",
    "text": "Contactgegevens\n\n\n\nIu Salvador\niu@dairyconsult.nl\n+34 670319309\n\n\nJaap van Zwieten\njaap@dairyconsult.nl\n+31 626426483\n\n\nAlbart Coster\nalbart@dairyconsult.nl\n+31.642402923\n\n\nHotel Conquistador\nwww.eurostarshotels.nl/eurostars-conquistador.html\n+34 957481102\n\n\nAutocares Alcántara\nwww.autocaresalcantara.com\n+34 957 429 130"
  },
  {
    "objectID": "explore.html",
    "href": "explore.html",
    "title": "Explore and setup",
    "section": "",
    "text": "With this tutorial, we have a working example website that we will explore together. We’ll learn a few rules and look for patterns to get an understanding of what things to do to help you start customizing and making it your own. And you can continue to use this website as a reference after the tutorial, along with Quarto documentation.\nWe’ll start our exploration online looking at the website architecture and GitHub repository. Then we’ll setup a copy for ourselves so that we can modify from a working example, which is a great way to learn something new. We’ll set it up so that any modifications (commits) will automatically be republished via GitHub Actions. Subsequent chapters will describe how to modify your repo using different tools (browser, RStudio, Jupyter)."
  },
  {
    "objectID": "explore.html#exploring-online",
    "href": "explore.html#exploring-online",
    "title": "Explore and setup",
    "section": "Exploring online",
    "text": "Exploring online\n\nThe website itself\nThis website has 5 things you can see on the left sidebar:\n\nWelcome\nExploring and setup\nQuarto workflows\nLearning more\nTransition from Rmd\n\nMost of these are pages, but you’ll see that “Quarto Workflows” has an arrow; it is a folder with additional pages inside.\n\n\nThe website’s repo\nLet’s go to this website’s GitHub repository (also called a “repo”), https://github.com/openscapes/quarto-website-tutorial. You can also click there from any page in this tutorial website by clicking the GitHub octocat icon underneath the Openscapes logo in the left navbar (click it holding command on Mac, or control on a PC to open it in a different tab in your browser).\nHave a look at the filenames. We can recognize the names of the webpages we’ve seen above, and they have red arrows marking them in the image below. You’ll see the “quarto-workflows” folder and the rest in this site are .qmd files, which are plain text Quarto files that can combine Markdown text with code. index.qmd is the home page. If you click inside “quarto-workflows” you’ll see a mix of filetypes!\n\n\n\nquarto-website-tutorial GitHub repository with files for webpages marked with red arrows\n\n\nThe _site folder has html files with names that should be familiar: they match the .md files we were just exploring. This folder is where Quarto stores files to build the website."
  },
  {
    "objectID": "explore.html#quarto.yml-intro",
    "href": "explore.html#quarto.yml-intro",
    "title": "Explore and setup",
    "section": "_quarto.yml intro",
    "text": "_quarto.yml intro\nThere is also a _quarto.yml file, which is the website’s configuration file. It is essentially metadata for the website that includes the order that the pages/chapters will be in. This is where you update the organization of your website: which page comes before another. If we compare side-by-side, you’ll see that the pages that appear on our website are listed there.\n\n\n\n_quarto.yml and website side-by-side\n\n\nWe’ll learn more about how to interact with _quarto.yml in Quarto Workflows."
  },
  {
    "objectID": "explore.html#fork-to-your-account",
    "href": "explore.html#fork-to-your-account",
    "title": "Explore and setup",
    "section": "Fork to your account",
    "text": "Fork to your account\nLet’s start with an existing Quarto site and copy it into your space to edit. You’ll need a free GitHub account that you create at github.com (follow this advice about choosing your username).\nFirst, choose an existing website to copy. The simplest option is to start with this site: quarto-website-tutorial.\nOther options of potential interest:\n\n2021-Cloud-Hackathon\n2022-SWOT-Ocean-Cloud-Workshop\nOpenscapes Approach-Guide\n\nNext, follow these steps to fork and setup your repo with GitHub Actions from Gavin Fay, using the repo you chose. These instructions will take ~5 minutes.\nNow you’ve got a copy of your repo of choice in your own GitHub account, and you’re set to start making your own edits. Your GitHub repo is set up with a GitHub Action that will use Quarto to rebuild and republish your site anytime you make a commit: committing will trigger the GitHub Action to rebuild and republish the book.\nNote that the GitHub Action for this book does not include R or Python so those will need to be added if your website relies on code. See https://github.com/r-lib/actions for more details and examples.\n\nDownload instead of fork\nForking might not always be the way to go - you can’t fork into the same GitHub user account or organization so if for example you want to make a copy of 2021-Cloud-Hackathon repo within the same NASA-Openscapes GitHub Organization, you’ll need to download instead of fork. In this case, follow these steps to download and copy into a new repository, and set up the GitHub Action separately.\n\nDownload github repo files\nNavigate to https://github.com/openscapes/quarto-website-tutorial (or any other quarto site repo of choice). Click the green “Code” button and select “Download ZIP”. When it downloads on your computer, unzip the files.\n\n\nCreate a new GitHub repo\nNavigate to your GitHub account or organization, and create a new repository, naming it what you’d like. You’ll need a free GitHub account that you create at github.com (follow this advice about choosing your username). When you’re logged in, github.com will show a green button that says “New” which you’ll also see as you navigate to your username’s repository page.\n\n\nAdd original site files\nTo use the GitHub file uploader, click the button next to the green “Code” button that says “Add file”. Add file &gt; Upload files. Then, on your computer, select all the files in unzipped folder (command-A or control-A), and drag them to the GitHub uploader page. Scroll down to write a commit message, which effectively saves your files when you’re working in the browser.\nNote: if you’re comfortable cloning the new repository and copying files into it locally before committing and pushing back to GitHub, that can be preferable to the uploader, which does have limitations with complex repos (although the uploader works fine with this tutorial repo)."
  },
  {
    "objectID": "explore.html#setup-github-action",
    "href": "explore.html#setup-github-action",
    "title": "Explore and setup",
    "section": "Set up GitHub publishing",
    "text": "Set up GitHub publishing\nIf you’ve used the GitHub uploader, you’ll need to set up GitHub publishing separately. We’ll do this in a few steps: we’ll set up a GitHub Action within your repo, and create a gh-pages branch.\nFirst, the GitHub Action. Go back to your main view of your GitHub repository by clicking on the name of your repository in blue at the top-left (the url in your browser window should say https://github.com/username/repo-name).\nNext to the green code button, click Add file &gt; Create new file. Name it exactly this: .github/workflows/quarto-publish.yml . In detail: start by typing the . with github and when you type the / it will give you a new text box to type workflows (plural!), then another /, and finally, quarto-publish.yml.\nNow you’ll have an empty new file. Paste the following in this empty file - you can click on the top-right of this box to copy all the code inside this code box:\non:\n  push:\n    branches: main\n\nname: Render and Publish\n\njobs:\n  build-deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v2 \n        \n      - name: Set up Quarto\n        uses: quarto-dev/quarto-actions/setup@v2\n        with:\n          # To install LaTeX to build PDF book \n          tinytex: true \n          # uncomment below and fill to pin a version\n          # version: 0.9.600\n      \n      # add software dependencies here\n\n      - name: Publish to GitHub Pages (and render)\n        uses: quarto-dev/quarto-actions/publish@v2\n        with:\n          target: gh-pages\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # this secret is always available for github actions\nCommit this to save your new quarto-publish.yml file. This is your GitHub Action.\nNext, we’ll create a new gh-pages branch. Go back to the main view of your GitHub repository. On the far left from the green “Code” button, click the button that says “main”. In the pull-down menu, type gh-pages - all lowercase, with a hyphen. Click the bold text that says “Create branch: gh-pages from main”.\nNow click on the Settings tab in the top right of your repository. On the left sidebar, click Pages. At the top of Pages under “Source”, select gh-pages root, and press Save. You’ll then see a green highlighted text saying that your site is published at a “github.io” url."
  },
  {
    "objectID": "explore.html#confirm",
    "href": "explore.html#confirm",
    "title": "Explore and setup",
    "section": "Confirm your website is published",
    "text": "Confirm your website is published\nTo confirm that your website is published, go back to your main repository page. You’ll now see an orange dot showing that the GitHub Action is beginning to publish the page.\n\n\n\nOur repo with orange dot indicating in-progress GitHub Action build\n\n\nIf you do not see this orange dot, you might need to make a small commit to trigger the GitHub Actions build. If this is the case, click the pencil on the top-right of the README.md file as circled in the image below, add some small edit (like a space after a period), and scroll down to click commit. Now you should see the orange dot.\n\n\n\n\n\nWhen your orange do becomes a green check, you can go inspect your published site at “https://username.github.io/your-repo). For example: https://openscapes.github.io/quarto-website-tutorial.\n\n\n\nOur repo with green check indicating successful GitHub Action build"
  },
  {
    "objectID": "explore.html#renaming-your-repo",
    "href": "explore.html#renaming-your-repo",
    "title": "Explore and setup",
    "section": "Renaming your repo",
    "text": "Renaming your repo\nIf you’d like to rename your repo, go to Settings and the option to rename is on the top of the main settings page."
  },
  {
    "objectID": "explore.html#onward",
    "href": "explore.html#onward",
    "title": "Explore and setup",
    "section": "Onward!",
    "text": "Onward!\nNow you are ready to start editing and publishing! The next chapter describes how starting off from the browser, using Markdown."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Studiereis naar Córdoba, 13 tot 16 november 2023",
    "section": "",
    "text": "Welkom bij deze studiereis. Tijdens deze 4-daagse reis overnachten we in de stad Córdoba en bezoeken we bedrijven in het gebied Valle de los Pedroches.\nOp deze site vindt u informatie over de reis, de lijst met deelnemers, en ook informatie over de bedrijven die we bezoeken.\nWe hopen op een mooie en fijne reis, waarin we met elkaar nieuwe kennis opdoen en waarin u kans heeft om interessante contacten op te bouwen met collega melkveehouders."
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Studiereis naar Córdoba, 13 tot 16 november 2023",
    "section": "",
    "text": "Welkom bij deze studiereis. Tijdens deze 4-daagse reis overnachten we in de stad Córdoba en bezoeken we bedrijven in het gebied Valle de los Pedroches.\nOp deze site vindt u informatie over de reis, de lijst met deelnemers, en ook informatie over de bedrijven die we bezoeken.\nWe hopen op een mooie en fijne reis, waarin we met elkaar nieuwe kennis opdoen en waarin u kans heeft om interessante contacten op te bouwen met collega melkveehouders."
  },
  {
    "objectID": "transition-from-rmarkdown.html",
    "href": "transition-from-rmarkdown.html",
    "title": "Transition from RMarkdown",
    "section": "",
    "text": "You may already have workflows in RMarkdown and are interested in transitioning to Quarto. There’s no hurry to migrate to Quarto. Keep using Rmarkdown and when you’re ready the migration will be fine.\nHere are some notes as we migrate RMarkdown sites and books.\nTODO: translating R code chunks"
  },
  {
    "objectID": "transition-from-rmarkdown.html#bookdown-to-quarto",
    "href": "transition-from-rmarkdown.html#bookdown-to-quarto",
    "title": "Transition from RMarkdown",
    "section": "Bookdown to Quarto",
    "text": "Bookdown to Quarto\nConverting a Bookdown book to Quarto is slightly more involved than converting a website. A book has chapters whose order must be defined, and likely has citations and cross-refs. Still, conversion is not that hard.\nWe got some practice converting from Bookdown to Quarto by helping Gavin Fay convert his lab’s fantastic onboarding documentation, the Faylab Lab Manual. Here’s the GitHub view before and after.\nOur best first reference material for this was Nick Tierney’s Notes on Changing from Rmarkdown/Bookdown to Quarto. Nick shares some scripts in that post to automate some changes. In our case, the book was small enough that we made all changes manually. Quarto documentation was indispensable.\n\nExperimenting in a low-risk environment\nWe forked a copy of the Faylab Lab manual to the Openscapes organization, and worked in a branch so we could make changes relatively risk-free. We could always fork a new copy of the original if we “broke” something. (Caution: the default when making a pull request from a fork is to push changes to the original upstream repo, not your fork and it does this without warning if you have write-access to that repo.) With local previews it’s easy to test / play with settings to see what they do. We tended to make a change, Preview, then compare the look and functionality of the book to the original. It was helpful to comment out some elements of the configuration file _output.yml after their counterparts had been added to the Quarto configuration file _quarto.yml, or to confirm they were no longer needed, before making the drastic move of deleting them.\n\n\nThe conversion\nHere are the main steps to convert the Faylab Lab manual from Bookdown to Quarto.\nCreate new empty file called _quarto.yml and add book metadata there. The screenshots below\nSet project type as book.\nMove metadata out of index.qmd and into _quarto.yml. Title, author, and publication date were in index.qmd with date set using date: \"Last updated:r Sys.Date()\". Now these are in _quarto.yml with date set using date: last-modified. Note that having R code would require you to adjust code chunk options in the Quarto style (#|). This tripped us up a bit; see GitHub Actions.\nMove chapters listing out of _bookdown.yml and into _quarto.yml.\nAdd page footer to _quarto.yml.\nHere’s what ours looked like when we finished the steps above (_quarto.yml).\n\n\n\n\n\n\n_quarto.yml contents\n\n\n\n\n\n\n\nFaylab Lab Manual\n\n\n\n\n\nChange insertion of images from html style to Quarto style. (Note Quarto calls them “figures”, not “images”.) The following snippet will insert the GitHub octocat logo in a page:\n![](https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png){fig-align=\"left\" width=\"35px\"}\nChange all filename extensions .Rmd -&gt; .qmd (you could Preview after this change and see that the book looks the same). Note that Quarto works with .Rmd files just as well as it does .qmd, so this change is not urgent. In fact, if you have a lot of R code in your .Rmds (unlike the Faylab Lab Manual), there will be additional tinkering needed to make the code chunks happy.\n\n\nCitations\nThe Faylab Lab Manual cited two papers, presenting us with an opportunity to see how easy it is to add references to a Quarto book. Briefly, in the Visual Editor, Insert &gt; Citation &gt; DOI. Pasting the DOI or its full URL, we can insert the citation. This automatically creates a references.bib file and adds the full citations at the bottom of the chapter page (watch demo). In July 2022, we had to manually add a ## References heading, but this may not be necessary in future Quarto updates.\n\n\n\n\n\n\nInsert citation via its DOI using RStudio Visual Editor\n\n\n\n\n\n\n\n\n\n\nPublishing notes\nIf the book’s output is strictly html, there’s no need to specify output-dir in _quarto.yml. The output directory default is _book/, which is what we’d like. If we wanted other types of output like like PDF or EPUB, etc. those single file outputs are also written to the output-dir (Quarto docs).\nIf you currently have a docs/ folder, delete it.\nUpdate .gitignore to ignore _book/. At the same time, we have it ignore caches and a .quarto file:\n/.quarto/\n*_cache/\n_book/\nOnce all is settled, delete _output.yml.\nOnce the Openscapes fork was fully reviewed, we made a pull request from that to the main branch of the book’s repo. Once that was merged, we set up GitHub Actions to render the book. (TODO: instructions for GitHub Actions)\n\n\nGitHub Actions\nThis book was mostly prose and screenshots without any R code. This made the conversion from RMarkdown to Quarto likely more straightforward than if you also needed to adjust code chunk options in the quarto style (#|). Our initial GitHub Action to render the converted Faylab Lab Manual failed because we had a piece of R code - even though the code was commented out! This was resolved when we deleted the line."
  },
  {
    "objectID": "transition-from-rmarkdown.html#distill-to-quarto",
    "href": "transition-from-rmarkdown.html#distill-to-quarto",
    "title": "Transition from RMarkdown",
    "section": "Distill to quarto",
    "text": "Distill to quarto\nWe transitioned our events site from distill to quarto in May 2022 (github view before and after). We followed excellent notes and examples from Nick Tierney and Danielle Navarro.\nAfter we had changed all the files, the Build tab in the RStudio IDE still showed “Build website” rather then “Render Website” and “Preview Website”, and would error when we pushed them (because that button was expecting a distill site, not a quarto site). To fix this, we updated the .Rproj file. Clicking on the .Rproj file in the RStudio IDE will open a dialog box where you can click things you want (you can also open these in a text editor or from the GitHub website to see the actual text). To fix this situation with the Build tab: Project Options &gt; Build Tools &gt; Project Build Tools &gt; None.\nLooking at files /posts/_metadata.yml and _quarto.yml helps see where things are defined. For example, to make event post citations appear, we added citation: true to /posts/_metadata.yml and in _quarto.yml under the website key we set site-url: https://openscapes.github.io/events. We deleted footer.html used with distill because footer is now defined in quarto.yml.\n\nPublishing notes\n\nBackground: Our distill site had been set up to output to a docs folder, and had GitHub Settings &gt; Pages set to look there rather gh-pages branch. (Julie note: this was a new-to-me capability when we set up the events distill site in Spring 2021 so I had forgotten that was an option). We’ve inititally kept this same set-up for now with our events page in _quarto.yml: output-dir: docs. However, this is sub-optimal; better to not have to commit and push these files but to instead have a GitHub Action generate them upon a commit. So the following is what we did -\n\nDon’t specify output-dir in _quarto.yml. The output directory default is _site/, which is what we’d like.\nIf you currently have a docs/ folder (like we did as we were experimenting), delete it.\nUpdate .gitignore to ignore _site/. At the same time, we have it ignore caches and a .quarto file:\n/.quarto/\n*_cache/\n_site/\nPush these changes, merge into main.\nOn GitHub.com, in your repo, set up GitHub publishing\nFollow instructions from the explore and setup chapter."
  },
  {
    "objectID": "transition-from-rmarkdown.html#troubleshooting",
    "href": "transition-from-rmarkdown.html#troubleshooting",
    "title": "Transition from RMarkdown",
    "section": "Troubleshooting",
    "text": "Troubleshooting\n\nGitHub Action fails, says you need RMarkdown but you don’t have R code!\nAnd you changed all .Rmds to .qmds!\nYou likely have a few setup code chunks from RMarkdown, that look like this:\n{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = FALSE)\nYou can find them by opening each of your files and having a look, or use GitHub’s search for the keyword knitr"
  }
]